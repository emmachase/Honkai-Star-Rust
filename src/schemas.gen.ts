// Generated by ts-to-zod
import { z } from "zod";

export const jingliuConfigSchema = z.object({
  enhanced_state: z.boolean(),
  hp_drain_pct: z.number(),
  e1_crit_dmg: z.boolean(),
  e2_skill_buff: z.boolean(),
});

export const characterSkillStateSchema = z.object({
  basic: z.number(),
  skill: z.number(),
  ult: z.number(),
  talent: z.number(),
});

export const characterTraceStateSchema = z.object({
  ability_1: z.boolean(),
  ability_2: z.boolean(),
  ability_3: z.boolean(),
  stat_1: z.boolean(),
  stat_2: z.boolean(),
  stat_3: z.boolean(),
  stat_4: z.boolean(),
  stat_5: z.boolean(),
  stat_6: z.boolean(),
  stat_7: z.boolean(),
  stat_8: z.boolean(),
  stat_9: z.boolean(),
  stat_10: z.boolean(),
});

export const effectPropertyTypeSchema = z.union([
  z.literal("HPDelta"),
  z.literal("AttackDelta"),
  z.literal("DefenceDelta"),
  z.literal("SpeedDelta"),
  z.literal("HPAddedRatio"),
  z.literal("AttackAddedRatio"),
  z.literal("DefenceAddedRatio"),
  z.literal("CriticalChanceBase"),
  z.literal("CriticalDamageBase"),
  z.literal("HealRatioBase"),
  z.literal("StatusProbabilityBase"),
  z.literal("PhysicalAddedRatio"),
  z.literal("FireAddedRatio"),
  z.literal("IceAddedRatio"),
  z.literal("ThunderAddedRatio"),
  z.literal("WindAddedRatio"),
  z.literal("QuantumAddedRatio"),
  z.literal("ImaginaryAddedRatio"),
  z.literal("AllDamageTypeAddedRatio"),
  z.literal("BreakDamageAddedRatioBase"),
  z.literal("SPRatioBase"),
  z.literal("StatusResistanceBase"),
]);

export const enemyConfigSchema = z.object({
  count: z.number(),
  level: z.number(),
  resistance: z.number(),
  elemental_weakness: z.boolean(),
  weakness_broken: z.boolean(),
});

export const iShallBeMyOwnSwordConfigSchema = z.object({
  eclipse_stacks: z.number(),
  max_stack_def_pen: z.boolean(),
});

export const lightConeConfigSchema = z.object({
  IShallBeMyOwnSword: iShallBeMyOwnSwordConfigSchema,
});

export const lightConeStateSchema = z.object({
  level: z.number(),
  ascension: z.number(),
  superimposition: z.number(),
});

export const relicSetSchema = z.union([
  z.literal("PasserbyOfWanderingCloud"),
  z.literal("MusketeerOfWildWheat"),
  z.literal("KnightOfPurityPalace"),
  z.literal("HunterOfGlacialForest"),
  z.literal("ChampionOfStreetwiseBoxing"),
  z.literal("GuardOfWutheringSnow"),
  z.literal("FiresmithOfLavaForging"),
  z.literal("GeniusOfBrilliantStars"),
  z.literal("BandOfSizzlingThunder"),
  z.literal("EagleOfTwilightLine"),
  z.literal("ThiefOfShootingMeteor"),
  z.literal("WastelanderOfBanditryDesert"),
  z.literal("LongevousDisciple"),
  z.literal("MessengerTraversingHackerspace"),
  z.literal("TheAshblazingGrandDuke"),
  z.literal("PrisonerInDeepConfinement"),
  z.literal("SpaceSealingStation"),
  z.literal("FleetOfTheAgeless"),
  z.literal("PanCosmicCommercialEnterprise"),
  z.literal("BelobogOfTheArchitects"),
  z.literal("CelestialDifferentiator"),
  z.literal("InertSalsotto"),
  z.literal("TaliaKingdomOfBanditry"),
  z.literal("SprightlyVonwacq"),
  z.literal("RutilantArena"),
  z.literal("BrokenKeel"),
  z.literal("FirmamentFrontlineGlamoth"),
  z.literal("PenaconyLandOfTheDreams"),
]);

export const relicSlotSchema = z.union([
  z.literal("Head"),
  z.literal("Hands"),
  z.literal("Chest"),
  z.literal("Feet"),
  z.literal("PlanarSphere"),
  z.literal("LinkRope"),
]);

export const relicFiltersSchema = z.object({
  chest: z.array(effectPropertyTypeSchema),
  feet: z.array(effectPropertyTypeSchema),
  planar_sphere: z.array(effectPropertyTypeSchema),
  link_rope: z.array(effectPropertyTypeSchema),
});

export const characterConfigSchema = z.object({
  Jingliu: jingliuConfigSchema,
});

export const characterStateSchema = z.object({
  level: z.number(),
  ascension: z.number(),
  eidolon: z.number(),
  skills: characterSkillStateSchema,
  traces: characterTraceStateSchema,
});

export const relicSchema = z.object({
  set: relicSetSchema,
  slot: relicSlotSchema,
  level: z.number(),
  main_stat: z.tuple([effectPropertyTypeSchema, z.number()]),
  sub_stats: z.array(z.tuple([effectPropertyTypeSchema, z.number()])),
});
